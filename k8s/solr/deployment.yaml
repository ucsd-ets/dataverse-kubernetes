---
kind: Deployment
apiVersion: apps/v1
metadata:
  name: solr
  labels:
    app.kubernetes.io/name: solr
    app.kubernetes.io/version: "4.20"
    app.kubernetes.io/component: searchindex
    app.kubernetes.io/part-of: dataverse
    app.kubernetes.io/managed-by: kubectl
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: solr
      app.kubernetes.io/part-of: dataverse
  revisionHistoryLimit: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: solr
        app.kubernetes.io/part-of: dataverse
    spec:
      containers:
        - name: solr
          image: ucsdets/dataverse-solr
          resources:
            requests:
              memory: "2Gi"
            limits:
              memory: "4Gi"
          ports:
            - name: index
              containerPort: 8983
          volumeMounts:
            - name: home
              mountPath: /opt/solr/server/solr/collection1/data
              subPath: 234/solr-data
            - name: schema
              mountPath: /schema
            - name: logs
              mountPath: /opt/solr/server/logs
          env:
            - name: SOLR_PORT  # Otherwise, this is wrongfully set by K8s.
              value: "8983"
          livenessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 4 # thus restart after 4 minutes n/a
            httpGet:
              path: /solr/collection1/admin/ping
              port: index
          readinessProbe:
            initialDelaySeconds: 30
            periodSeconds: 60
            failureThreshold: 2
            httpGet:
              path: /solr/collection1/admin/ping
              port: index
        - name: schema-sidecar
          image: ucsdets/dataverse-solr
          command: ["/tini", "--", "/scripts/schema/sidecar.sh"]
          ports:
            - name: webhook
              containerPort: 9000
          volumeMounts:
            - name: schema
              mountPath: "/schema"
          readinessProbe:
            initialDelaySeconds: 15
            periodSeconds: 20
            failureThreshold: 2
            httpGet:
              path: /
              port: webhook
      initContainers:
        - name: volume-mount-hack
          image: giantswarm/tiny-tools
          command: ["echo", "sh", "-c", "chown -c 8983:8983 /data"]
          volumeMounts:
            - name: home
              mountPath: /data
              subPath: 234/solr-data
        - name: schema-init
          image: ucsdets/dataverse-solr
          command: ["/scripts/schema/init.sh"]
          volumeMounts:
            - name: schema
              mountPath: /schema
            - name: api-secret
              mountPath: "/scripts/schema/api"
              readOnly: true
      volumes:
        - name: home
          persistentVolumeClaim:
            claimName: home
        - name: logs
          emptyDir: {}
        - name: schema
          emptyDir: {}
        - name: api-secret
          secret:
            secretName: dataverse-api
      # securityContext:
      #   runAsUser: 108279
      #   runAsGroup: 100010600
